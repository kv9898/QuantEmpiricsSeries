modelsummary(models, estimate = "{estimate} ({p.value}){stars}", statistic = "[{conf.low}, {conf.high}]",
notes=c("* p < 0.1, ** p < 0.05, *** p < 0.01",
"Effective observations for SC and SDID are smaller due to zero time and unit weights.",
"CIs are calculated through Wild Cluster Bootstrapping by country with Webb weights."),
stars = c('*' = .1, '**' = .05, '***' = .01), gof_map = gofmap,
coef_rename = c("1*treated = 0" = "ATT"),
output="default")
tau.hat.log = synthdid_estimate(setup$Y, setup$N0, setup$T0)
#plot(tau.hat.log, treated.name = "log C-P trade", control.name = "log synthetic C-P trade")
tau.hat.sc = sc_estimate(setup$Y, setup$N0, setup$T0)
tau.hat.did = did_estimate(setup$Y, setup$N0, setup$T0)
estimates = list(tau.hat.log, tau.hat.sc, tau.hat.did)
synthdid_units_plot(estimates, se.method="none") + labs(size="Weight:") +
theme(legend.background=element_blank(), legend.title = element_text(),
legend.direction='horizontal', legend.position=c(.17,.80),
strip.background=element_blank(), strip.text.x = element_blank())
ggsave(file="output/import_unitplot.pdf",device="pdf", units="in", width=10.75, height=4.53)
names(estimates) = c('Synthetic Diff-in-Diff', 'Synthetic Control', 'Diff-in-Diff')
synthdid_plot(estimates, facet.vertical=FALSE, se.method="none",
control.name='Synthetic imports', treated.name='imports',
lambda.comparable=TRUE,
trajectory.linetype = 1, line.width=.75, effect.curvature=-.4,
trajectory.alpha=.7, effect.alpha=.7,
diagram.alpha=1, onset.alpha=.7) +
theme(legend.position=c(.08,.13), legend.direction='vertical',
legend.key=element_blank(), legend.background=element_blank(),
) + xlab("Months since treatment") +ylab("Log(Filipino imports from China)")
synthdid_plot(estimates, facet.vertical=FALSE, se.method="none",
control.name='Synthetic imports', treated.name='imports',
lambda.comparable=TRUE,
trajectory.linetype = 1, line.width=.75, effect.curvature=-.4,
trajectory.alpha=.7, effect.alpha=.7,
diagram.alpha=1, onset.alpha=.7) +
theme(legend.position=c(.08,.13), legend.direction='vertical',
legend.key=element_blank(), legend.background=element_blank(),
) + xlab("Months since treatment") +ylab("Log(Filipino exports to China)")
ggsave(file="output/import_trendplot.pdf",device="pdf", units="in", width=10.75, height=4.53)
ggsave(file="output/import_trendplot.wmf",device="wmf", units="in", width=10.75, height=4.53)
ggsave(file="output/import_trendplot.png",device="png", units="in", width=10.75, height=4.53)
estimates = list(tau.hat.log, tau.hat.sc, tau.hat.did)
synthdid_units_plot(estimates, se.method="none") + labs(size="Weight:") +
theme(legend.background=element_blank(), legend.title = element_text(),
legend.direction='horizontal', legend.position=c(.17,.80),
strip.background=element_blank(), strip.text.x = element_blank())
ggsave(file="output/import_unitplot.png",device="png", units="in", width=10.75, height=4.53)
data <- subset(data, select = -c(omega, lambda, weights))
data$omega [data$Country == data$Country [data$treated==1][1]] <- 1
T1 <- length(data$Country[data$treated==1])
data$lambda [data$M.unit %in% data$M.unit[data$treated==1]] <- 1/T1
omega.df <- data.frame(Country = rownames(attributes(tau.hat.log)$setup$Y)[-nrow(attributes(tau.hat.log)$setup$Y)], omega = attributes(tau.hat.log)$weights$omega)
lambda.df <- data.frame(M.unit = colnames(attributes(tau.hat.log)$setup$Y)[1:(length(colnames(attributes(tau.hat.log)$setup$Y))-T1)], lambda = attributes(tau.hat.log)$weights$lambda)
data <- merge(data, omega.df, by = "Country", all = TRUE, no.dups = TRUE)
data$omega <- ifelse(is.na(data$omega.x),data$omega.y,data$omega.x)
data <- subset(data, select = -c(omega.x,omega.y))
data <- merge(data, lambda.df, by = "M.unit", all = TRUE, no.dups = TRUE)
data$lambda <- ifelse(is.na(data$lambda.x),data$lambda.y,data$lambda.x)
data <- subset(data, select = -c(lambda.x, lambda.y))
data$weights <- data$lambda * data$omega
data_only <- subset(data, weights!=0)
lm_sdid <- feols(logimport ~ treated + factor(Country) + factor(M.unit), data = data_only, weights = data_only$weights)
dqrng::dqset.seed(seed)
lm_sdid_wild <-  boottest(lm_sdid, param="treated", B=9999, clustid="Unit", fe=NULL, type="webb")
data_es <- subset(data[order(data$Unit,data$M.unit),], weights!=0)
data_es$time_to_treat = ifelse(data_es$Unit==1, data_es$M.unit, 0)
lm_ev <- feols(logimport ~ i(time_to_treat, treated, ref=-9) + factor(Country) + factor(M.unit), data = data_es, weights = data_es$weights)
es_results <- data.frame(event_dates = numeric(), estimates = numeric(), lower_ci = numeric(),
upper_ci = numeric(), lower_90 = numeric(), upper_90 = numeric(), p.value=numeric(), stringsAsFactors = FALSE)
for (x in 0:6){
dqrng::dqset.seed(seed)
lm_ev_wild <- boottest(lm_ev, param=paste0("time_to_treat::",x,":treated"), B=999, clustid="Country", fe=NULL, type="webb")
dqrng::dqset.seed(seed)
lm_ev_wild90 <- boottest(lm_ev, sign_level=0.10, param=paste0("time_to_treat::",x,":treated"), B=999, clustid="Country", fe=NULL, type="webb")
es_results[x+1,1] <- x
es_results[x+1,2] <- lm_ev_wild$point_estimate
es_results[x+1,3] <- lm_ev_wild$conf_int[1]
es_results[x+1,4] <- lm_ev_wild$conf_int[2]
es_results[x+1,5] <- lm_ev_wild90$conf_int[1]
es_results[x+1,6] <- lm_ev_wild90$conf_int[2]
es_results[x+1,7] <- lm_ev_wild$p_val
}
lm_ev_sum=list(nobs=lm_ev$nobs, r.squared=get_gof(lm_ev)$r.squared,
adj.r.squared=get_gof(lm_ev)$adj.r.squared,
estimates=es_results)
es_results <- rbind(data.frame(event_dates=-1, estimates=0, lower_ci=0, upper_ci=0, lower_90=0, upper_90=0, p.value=0), es_results)
ggplot(es_results, aes(x = event_dates, y = estimates))+ ggtitle("Event Study Style Plot: Filipino exports to China") +
geom_ribbon(aes(ymin = lower_ci, ymax = upper_ci), fill = "grey", alpha = 0.5) + geom_line() +
geom_ribbon(aes(ymin = lower_90, ymax = upper_90), fill = "darkgrey", alpha = 0.5) +
labs(x="Months since treatment",y="ATT with 90% and 95% CIs") + geom_hline(yintercept = 0, linetype = "solid", color = "black") +
geom_vline(xintercept = -1, linetype = "dashed") + geom_point(size = 3) +
theme_minimal() + theme(panel.background = element_rect(fill = "white"))
ggsave(file="output/import_eventplot.png",device="png", units="in", width=6, height=4.53)
class(lm_ev_sum) <- "bootevent"
tidy.bootevent <- function(x, ...) {
ret <- data.frame(
term      = x$estimates$event_dates,
estimate  = x$estimates$estimates,
conf.low  = x$estimates$lower_ci,
conf.high = x$estimates$upper_ci,
p.value   = x$estimates$p.value)
ret
}
glance.bootevent <- function(x, ...) {
ret <- data.frame(
r.squared = x$r.squared,
adj.r.squared= x$adj.r.squared,
nobs  = x$nobs,
fe.u  = 'Yes',
fe.t  = 'Yes')
ret
}
gofmap <- list(list("raw" = "fe.u", "clean" = "FE: Country", "fmt" = NULL),
list("raw" = "fe.t", "clean" = "FE: Time", "fmt" = NULL),
list("raw" = "nobs", "clean" = "Effective N", "fmt" = 0),
list("raw" = "r.squared", "clean" = "R2", "fmt" = 3),
list("raw" = "adj.r.squared", "clean" = "R2 Adj.", "fmt" = 3))
modelsummary(list('ATT by month'=lm_ev_sum), estimate = "{estimate} ({p.value}){stars}", statistic = "[{conf.low}, {conf.high}]",
notes=c("* p < 0.1, ** p < 0.05, *** p < 0.01",
"Effective observations for SDID are small due to zero time and unit weights.",
"CIs are calculated through Wild Cluster Bootstrapping by country with Webb weights."),
stars = c('*' = .1, '**' = .05, '***' = .01), gof_map = gofmap,
output="default")
rm(list=ls())
#options(repos = c(skranz = 'https://skranz.r-universe.dev',CRAN = 'https://cloud.r-project.org'))
need <- c("modelsummary","rstudioapi","haven","fixest","ggiplot","car", "tidyverse",
"parameters",'ParallelTrendsPlot',"ggdist") # list packages needed
have <- need %in% rownames(installed.packages()) # checks packages you have
if(any(!have)) install.packages(need[!have]) # install missing packages
invisible(lapply(need, library, character.only=T)) # load needed packages
setwd(dirname(rstudioapi::getSourceEditorContext()$path)) #set working directory to the file directory
# Import dataset
data <- read_dta("eitc.dta")
summary(data) #view dataframe and variables
data$post93 <- as.numeric(data$year >= 1994)
table(data$post93)
# The programme only affected women with at least 1 child, so the treatment group will be all women with children.
data$anykids <- as.numeric(data$children > 0)
table(data$anykids)
#produce a treatment variable
data$treatment <- data$post93*data$anykids
table(data$treatment)
pre93_nokids = colMeans(subset(data, post93 == 0 & anykids == 0, select=work))
pre93_kids = colMeans(subset(data, post93 == 0 & anykids == 1, select=work))
post93_nokids = colMeans(subset(data, post93 == 1 & anykids == 0, select=work))
post93_kids = colMeans(subset(data, post93 == 1 & anykids == 1, select=work))
DiD<-(post93_kids-pre93_kids)-(post93_nokids-pre93_nokids) #estimate DiD
DiD #display DiD estimate
model1 = feols(work ~ post93 + anykids + post93*anykids, data = data, cluster="state")
summary(model1)
model1_fe <- feols(work ~  treatment|anykids+post93, data = data, cluster="state") #use a fixed effects sepcification
summary(model1_fe)
model2 = feols(work ~ anykids + post93 + post93*anykids + age + ed, data = data, cluster="state")
summary(model2)
model2_fe <- feols(work ~  treatment+ age + ed|anykids+post93, data = data, cluster="state") #use a fixed effects sepcification
summary(model2_fe)
model3 = feols(work ~ anykids + post93 + post93*anykids + age + ed + age*anykids + ed*anykids + age*post93 + ed*post93, data = data, cluster="state")
summary(model3)
model3_fe <- feols(work ~  treatment+ age + ed + age*anykids + ed*anykids + age*post93 + ed*post93|anykids+post93, data = data, cluster="state") #use a fixed effects sepcification
summary(model3_fe)
models=list(model1_fe, model2_fe, model3_fe)
modelsummary(models, stars=TRUE)
coef_map <- c("treatment"="ATT")
modelplot(models, coef_map=coef_map) + scale_x_continuous(limits= c(-0.02, 0.12)) +
geom_vline(xintercept=0) #95% CI only
dat <- map_dfr(c(.9, .95), function(x) {
modelplot(models, conf_level = x, draw = FALSE, , coef_map=coef_map) %>%
mutate(.width = x)
})
ggplot(dat, aes(y = term, x = estimate, xmin = conf.low, xmax = conf.high,
color = model)) + ggdist::geom_pointinterval(position = "dodge",
interval_size_range = c(1, 2), fatten_point=1.2) + theme_bw() +
scale_x_continuous(limits= c(-0.02, 0.12)) + geom_vline(xintercept=0) +
labs(x="Coefficient estimates with 90% and 95% CIs", y="ATT")  #90% and 95% CI
data.sub = data[data$year <= 1993,]
# Create a new hypothetical "after treatment" dummy variable
data.sub$post91 = as.numeric(data.sub$year >= 1992)
table(data.sub$post91)
# Run a placebo regression
model4 <- feols(work ~ post91*anykids|anykids + post91, data = data.sub, cluster="state")
summary(model4)
data.sub2 = data[data$children >= 1,]
data.sub2$morethan1 <- as.numeric(data.sub2$children > 1)
table(data.sub2$morethan1)
model5 <- feols(work ~ post93*morethan1|morethan1 + post93, data = data.sub2, cluster="state")
summary(model5)
#alternatively, do a event-study style plot
data_es <- data
data_es$time_to_treat = ifelse(data_es$anykids==1, data_es$year, 1993)
#without covariates
lm_ev <- feols(work ~ i(time_to_treat, anykids, ref=1993)| anykids+post93, data = data_es, cluster="state")
ggiplot(lm_ev, geom_style="ribbon", ci_level=c(0.9,0.95), theme = theme_minimal(),xlab = 'Year')
#with covariates and interactions
lm_ev3 <- feols(work ~ i(time_to_treat, anykids, ref=1993)+ age + ed + age*anykids + ed*anykids + age*post93 + ed*post93| anykids+post93, data = data_es, cluster="state") #without covariates
ggiplot(lm_ev3, geom_style="ribbon", ci_level=c(0.9,0.95), theme = theme_minimal(),xlab = 'Year')
lm_ev3$df.residual=degrees_of_freedom(lm_ev3) #add degrees of freedom information to the model
hypotheses <- c("time_to_treat::1991:anykids=0","time_to_treat::1992:anykids=0")
linearHypothesis(lm_ev3, hypotheses, test="F")
data_graph = aggregate(data$work, list(data$year,data$anykids == 1), mean)
# rename column headings (variables)
names(data_graph) = c("YR","Treatment","LFPR")
# Attach a new column with labels
data_graph$Group[1:6] = "no children"
data_graph$Group[7:12] = "children"
qplot(YR, LFPR, data=data_graph, geom=c("point","line"), colour=Group,
xlab="Year", ylab="Labor Force Participation Rate") + geom_vline(xintercept = 1994)
pdata <- parallel.trends.data(data,timevar='year',yvar="work",treatdummy='anykids',expdummy='post93',
cvars="age + ed + age*anykids + ed*anykids + age*post93 + ed*post93")
parallel.trends.plot(pdata, facet.mode=TRUE, add.exp.line="first")+theme_bw()
data$treatment_group=ifelse(data$anykids==1,"Treatment","Control")
gdat = data %>%
group_by(treatment_group, year,post93,anykids) %>%
summarize(y = mean(work))
gg = ggplot(gdat, aes(y=y,x=year, color= treatment_group)) +
geom_line() +
geom_vline(xintercept=1993) + guides(color = guide_legend(title = "Group"))+
theme_bw() + labs(x="Year", y="Labor Force Participation Rate", title="Diff-in-Diff Plot")
y.pre.tr <<- mean(filter(data,anykids==1, post93==0)$work) %>% round(3)
y.exp.tr <<- mean(filter(data,anykids==1, post93==1)$work) %>% round(3)
y.pre.co <<- mean(filter(data,anykids==0, post93==0)$work) %>% round(3)
y.exp.co <<- mean(filter(data,anykids==0, post93==1)$work) %>% round(3)
gg = gg +
geom_segment(x=1992, y=y.pre.tr, xend=1994.5, yend=y.exp.tr, linetype=1, linewidth=0.75, colour="#00BFC4")+
geom_segment(x=1992, y=y.pre.co, xend=1994.5, yend=y.exp.co, linetype=1, linewidth=0.75, colour="#F8766D") +
geom_segment(x=1992, y=y.pre.co, xend=1992, yend=y.pre.tr, linetype=5, colour="grey", linewidth=0.75) +
geom_segment(x=1994.5, y=y.exp.co, xend=1994.5, yend=y.pre.tr+y.exp.co-y.pre.co, linetype=5, colour="grey", linewidth=0.75) +
geom_segment(x=1992, y=y.pre.tr, xend=1994.5, yend=y.pre.tr+y.exp.co-y.pre.co, linetype=5, colour="black", linewidth=0.75) +
annotate("label", x=1992, y=y.pre.co-0.01,label=y.pre.co) +
annotate("label", x=1994.5, y=y.exp.tr+0.01,label=y.exp.tr) +
annotate("label", x=1994.5, y=y.exp.co-0.01,label=y.exp.co) + annotate("label", x=1992, y=y.pre.tr+0.01,label=y.pre.tr) +
geom_curve(aes(x = 1994.5, xend = 1994.5, y = y.pre.tr+y.exp.co-y.pre.co, yend = y.exp.tr),
curvature=.2, color = 'black', linewidth = 0.75, arrow = arrow(length = unit(.2, 'cm')))
gg
y.pre.tr <<- mean(filter(data,anykids==1, post93==0)$work) #not rounded
y.exp.tr <<- mean(filter(data,anykids==1, post93==1)$work)
y.pre.co <<- mean(filter(data,anykids==0, post93==0)$work)
y.exp.co <<- mean(filter(data,anykids==0, post93==1)$work)
(y.exp.tr-y.pre.tr)-(y.exp.co-y.pre.co) #result from plot
model1_fe #compare with regression result
datapred <- subset(pdata, .mode=="with control variables")
datapred$year <- datapred$.t
datapred$treatment_group[datapred$.group[,1]=="treatment"] <- "Treatment"
datapred$treatment_group[datapred$.group[,1]=="control"] <- "Control"
gdat_cov = datapred %>%
group_by(treatment_group, year,post93,anykids) %>%
summarize(y = mean(.y))
gg_cov = ggplot(gdat_cov, aes(y=y,x=year, color= treatment_group)) +
geom_line() +
geom_vline(xintercept=1993) + guides(color = guide_legend(title = "Group"))+
theme_bw() + labs(x="Year", y="Labor Force Participation Rate", title="Diff-in-Diff Plot (with covariates)")
y.pre.tr <<- mean(filter(datapred,anykids==1, post93==0)$.y) %>% round(3)
y.exp.tr <<- mean(filter(datapred,anykids==1, post93==1)$.y) %>% round(3)
y.pre.co <<- mean(filter(datapred,anykids==0, post93==0)$.y) %>% round(3)
y.exp.co <<- mean(filter(datapred,anykids==0, post93==1)$.y) %>% round(3)
gg_cov = gg_cov +
geom_segment(x=1992, y=y.pre.tr, xend=1994.5, yend=y.exp.tr, linetype=1, linewidth=0.75, colour="#00BFC4")+
geom_segment(x=1992, y=y.pre.co, xend=1994.5, yend=y.exp.co, linetype=1, linewidth=0.75, colour="#F8766D") +
geom_segment(x=1992, y=y.pre.co, xend=1992, yend=y.pre.tr, linetype=5, colour="grey", linewidth=0.75) +
geom_segment(x=1994.5, y=y.exp.co, xend=1994.5, yend=y.pre.tr+y.exp.co-y.pre.co, linetype=5, colour="grey", linewidth=0.75) +
geom_segment(x=1992, y=y.pre.tr, xend=1994.5, yend=y.pre.tr+y.exp.co-y.pre.co, linetype=5, colour="black", linewidth=0.75) +
annotate("label", x=1992, y=y.pre.co-0.01,label=y.pre.co) +
annotate("label", x=1994.5, y=y.exp.tr+0.01,label=y.exp.tr) +
annotate("label", x=1994.5, y=y.exp.co-0.01,label=y.exp.co) + annotate("label", x=1992, y=y.pre.tr+0.01,label=y.pre.tr) +
geom_curve(aes(x = 1994.5, xend = 1994.5, y = y.pre.tr+y.exp.co-y.pre.co, yend = y.exp.tr),
curvature=.2, color = 'black', linewidth = 0.75, arrow = arrow(length = unit(.2, 'cm')))
gg_cov
y.pre.tr <<- mean(filter(datapred,anykids==1, post93==0)$.y) #not rounded
y.exp.tr <<- mean(filter(datapred,anykids==1, post93==1)$.y)
y.pre.co <<- mean(filter(datapred,anykids==0, post93==0)$.y)
y.exp.co <<- mean(filter(datapred,anykids==0, post93==1)$.y)
(y.exp.tr-y.pre.tr)-(y.exp.co-y.pre.co) #result from plot
model3_fe #compare with regression result
rm(list=ls())
#options(repos = c(skranz = 'https://skranz.r-universe.dev',CRAN = 'https://cloud.r-project.org'))
need <- c("modelsummary","rstudioapi","haven","fixest","ggiplot","car", "tidyverse",
"parameters",'ParallelTrendsPlot',"ggdist") # list packages needed
have <- need %in% rownames(installed.packages()) # checks packages you have
if(any(!have)) install.packages(need[!have]) # install missing packages
invisible(lapply(need, library, character.only=T)) # load needed packages
setwd(dirname(rstudioapi::getSourceEditorContext()$path)) #set working directory to the file directory
data <- read_dta("eitc.dta")
summary(data) #view dataframe and variables
need <- c("modelsummary","rstudioapi","haven","fixest","ggiplot","car", "tidyverse",
"parameters",'ParallelTrendsPlot',"ggdist") # list packages needed
have <- need %in% rownames(installed.packages()) # checks packages you have
if(any(!have)) install.packages(need[!have]) # install missing packages
invisible(lapply(need, library, character.only=T)) # load needed packages
install.packages('ggiplot')
install.packages("ggiplot")
View(data)
as.numeric(TRUE)
as.numeric(FALSE)
data$anykids <- as.numeric(data$children > 0)
table(data$anykids)
data$treatment <- data$post93*data$anykids
data$treatment <- data$post93 * data$anykids
data$post93 <- as.numeric(data$year >= 1994)
table(data$post93)
data$treatment <- data$post93 * data$anykids
table(data$treatment)
pre93_nokids = colMeans(subset(data, post93 == 0 & anykids == 0, select=work))
pre93_kids = colMeans(subset(data, post93 == 0 & anykids == 1, select=work))
post93_nokids = colMeans(subset(data, post93 == 1 & anykids == 0, select=work))
post93_kids = colMeans(subset(data, post93 == 1 & anykids == 1, select=work))
pre93_nokids
pre93_kids
post93_nokids
post93_kids
DiD<-(post93_kids-pre93_kids)-(post93_nokids-pre93_nokids) #estimate DiD
DiD #display DiD estimate
model1 = feols(work ~ post93 + anykids + post93*anykids, data = data, cluster="state")
summary(model1)
model1 = feols(work ~ post93 + anykids + post93*anykids, data = data, cluster="state")
need <- c("modelsummary","rstudioapi","haven","fixest","ggiplot","car", "tidyverse",
"parameters",'ParallelTrendsPlot',"ggdist") # list packages needed
have <- need %in% rownames(installed.packages()) # checks packages you have
if(any(!have)) install.packages(need[!have]) # install missing packages
invisible(lapply(need, library, character.only=T)) # load needed packages
model1 = feols(work ~ post93 + anykids + post93*anykids, data = data, cluster="state")
summary(model1)
pre93_nokids = colMeans(subset(data, post93 == 0 & anykids == 0, select=work))
pre93_kids = colMeans(subset(data, post93 == 0 & anykids == 1, select=work))
post93_nokids = colMeans(subset(data, post93 == 1 & anykids == 0, select=work))
post93_kids = colMeans(subset(data, post93 == 1 & anykids == 1, select=work))
DiD<-(post93_kids-pre93_kids)-(post93_nokids-pre93_nokids) #estimate DiD
DiD #display DiD estimate
model1_fe <- feols(work ~  treatment|anykids+post93, data = data, cluster="state") #use a fixed effects sepcification
summary(model1_fe)
model2 = feols(work ~ anykids + post93 + post93*anykids + age + ed, data = data, cluster="state")
summary(model2)
model2_fe <- feols(work ~  treatment+ age + ed|anykids+post93, data = data, cluster="state") #use a fixed effects sepcification
summary(model2_fe)
model3 = feols(work ~ anykids + post93 + post93*anykids + age + ed + age*anykids + ed*anykids + age*post93 + ed*post93, data = data, cluster="state")
summary(model3)
model3_fe <- feols(work ~  treatment+ age + ed + age*anykids + ed*anykids + age*post93 + ed*post93|anykids+post93, data = data, cluster="state") #use a fixed effects sepcification
summary(model3_fe)
models=list(model1_fe, model2_fe, model3_fe)
modelsummary(models, stars=TRUE)
coef_map <- c("treatment"="ATT")
modelplot(models, coef_map=coef_map) + scale_x_continuous(limits= c(-0.02, 0.12)) +
geom_vline(xintercept=0) #95% CI only
dat <- map_dfr(c(.9, .95), function(x) {
modelplot(models, conf_level = x, draw = FALSE, , coef_map=coef_map) %>%
mutate(.width = x)
})
ggplot(dat, aes(y = term, x = estimate, xmin = conf.low, xmax = conf.high,
color = model)) + ggdist::geom_pointinterval(position = "dodge",
interval_size_range = c(1, 2), fatten_point=1.2) + theme_bw() +
scale_x_continuous(limits= c(-0.02, 0.12)) + geom_vline(xintercept=0) +
labs(x="Coefficient estimates with 90% and 95% CIs", y="ATT")  #90% and 95% CI
dat <- map_dfr(c(.9, .95, .99), function(x) {
modelplot(models, conf_level = x, draw = FALSE, , coef_map=coef_map) %>%
mutate(.width = x)
})
ggplot(dat, aes(y = term, x = estimate, xmin = conf.low, xmax = conf.high,
color = model)) + ggdist::geom_pointinterval(position = "dodge",
interval_size_range = c(1, 3), fatten_point=1.2) + theme_bw() +
scale_x_continuous(limits= c(-0.02, 0.12)) + geom_vline(xintercept=0) +
labs(x="Coefficient estimates with 90% and 95% CIs", y="ATT")  #90% and 95% CI
# sub set the data, including only years before 1994.
data.sub = data[data$year <= 1993,]
# Create a new hypothetical "after treatment" dummy variable
data.sub$post91 = as.numeric(data.sub$year >= 1992)
table(data.sub$post91)
model4 <- feols(work ~ post91*anykids|anykids + post91, data = data.sub, cluster="state")
summary(model4)
data.sub2 = data[data$children >= 1,]
data.sub2$morethan1 <- as.numeric(data.sub2$children > 1)
table(data.sub2$morethan1)
model5 <- feols(work ~ post93*morethan1|morethan1 + post93, data = data.sub2, cluster="state")
summary(model5)
data_es <- data
data_es$time_to_treat = ifelse(data_es$anykids==1, data_es$year, 1993)
#without covariates
lm_ev <- feols(work ~ i(time_to_treat, anykids, ref=1993)| anykids+post93, data = data_es, cluster="state")
ggiplot(lm_ev, geom_style="ribbon", ci_level=c(0.9,0.95), theme = theme_minimal(),xlab = 'Year')
lm_ev
lm_ev3 <- feols(work ~ i(time_to_treat, anykids, ref=1993)+ age + ed + age*anykids + ed*anykids + age*post93 + ed*post93| anykids+post93, data = data_es, cluster="state") #without covariates
ggiplot(lm_ev3, geom_style="ribbon", ci_level=c(0.9,0.95), theme = theme_minimal(),xlab = 'Year')
lm_ev3$df.residual=degrees_of_freedom(lm_ev3) #add degrees of freedom information to the model
hypotheses <- c("time_to_treat::1991:anykids=0","time_to_treat::1992:anykids=0")
linearHypothesis(lm_ev3, hypotheses, test="F")
data_graph = aggregate(data$work, list(data$year,data$anykids == 1), mean)
# rename column headings (variables)
names(data_graph) = c("YR","Treatment","LFPR")
# Attach a new column with labels
data_graph$Group[1:6] = "no children"
data_graph$Group[7:12] = "children"
qplot(YR, LFPR, data=data_graph, geom=c("point","line"), colour=Group,
xlab="Year", ylab="Labor Force Participation Rate") + geom_vline(xintercept = 1994)
pdata <- parallel.trends.data(data,timevar='year',yvar="work",treatdummy='anykids',expdummy='post93',
cvars="age + ed + age*anykids + ed*anykids + age*post93 + ed*post93")
parallel.trends.plot(pdata, facet.mode=TRUE, add.exp.line="first")+theme_bw()
#with n
data$treatment_group=ifelse(data$anykids==1,"Treatment","Control")
gdat = data %>%
group_by(treatment_group, year,post93,anykids) %>%
summarize(y = mean(work))
gg = ggplot(gdat, aes(y=y,x=year, color= treatment_group)) +
geom_line() +
geom_vline(xintercept=1993) + guides(color = guide_legend(title = "Group"))+
theme_bw() + labs(x="Year", y="Labor Force Participation Rate", title="Diff-in-Diff Plot")
y.pre.tr <<- mean(filter(data,anykids==1, post93==0)$work) %>% round(3)
y.exp.tr <<- mean(filter(data,anykids==1, post93==1)$work) %>% round(3)
y.pre.co <<- mean(filter(data,anykids==0, post93==0)$work) %>% round(3)
y.exp.co <<- mean(filter(data,anykids==0, post93==1)$work) %>% round(3)
gg = gg +
geom_segment(x=1992, y=y.pre.tr, xend=1994.5, yend=y.exp.tr, linetype=1, linewidth=0.75, colour="#00BFC4")+
geom_segment(x=1992, y=y.pre.co, xend=1994.5, yend=y.exp.co, linetype=1, linewidth=0.75, colour="#F8766D") +
geom_segment(x=1992, y=y.pre.co, xend=1992, yend=y.pre.tr, linetype=5, colour="grey", linewidth=0.75) +
geom_segment(x=1994.5, y=y.exp.co, xend=1994.5, yend=y.pre.tr+y.exp.co-y.pre.co, linetype=5, colour="grey", linewidth=0.75) +
geom_segment(x=1992, y=y.pre.tr, xend=1994.5, yend=y.pre.tr+y.exp.co-y.pre.co, linetype=5, colour="black", linewidth=0.75) +
annotate("label", x=1992, y=y.pre.co-0.01,label=y.pre.co) +
annotate("label", x=1994.5, y=y.exp.tr+0.01,label=y.exp.tr) +
annotate("label", x=1994.5, y=y.exp.co-0.01,label=y.exp.co) + annotate("label", x=1992, y=y.pre.tr+0.01,label=y.pre.tr) +
geom_curve(aes(x = 1994.5, xend = 1994.5, y = y.pre.tr+y.exp.co-y.pre.co, yend = y.exp.tr),
curvature=.2, color = 'black', linewidth = 0.75, arrow = arrow(length = unit(.2, 'cm')))
gg
y.pre.tr <<- mean(filter(data,anykids==1, post93==0)$work) #not rounded
y.exp.tr <<- mean(filter(data,anykids==1, post93==1)$work)
y.pre.co <<- mean(filter(data,anykids==0, post93==0)$work)
y.exp.co <<- mean(filter(data,anykids==0, post93==1)$work)
(y.exp.tr-y.pre.tr)-(y.exp.co-y.pre.co) #result from plot
model1_fe #compare with regression result
parallel.trends.plot(pdata, facet.mode=TRUE, add.exp.line="first")+theme_bw()
datapred <- subset(pdata, .mode=="with control variables")
datapred$year <- datapred$.t
datapred$treatment_group[datapred$.group[,1]=="treatment"] <- "Treatment"
datapred$treatment_group[datapred$.group[,1]=="control"] <- "Control"
gdat_cov = datapred %>%
group_by(treatment_group, year,post93,anykids) %>%
summarize(y = mean(.y))
gg_cov = ggplot(gdat_cov, aes(y=y,x=year, color= treatment_group)) +
geom_line() +
geom_vline(xintercept=1993) + guides(color = guide_legend(title = "Group"))+
theme_bw() + labs(x="Year", y="Labor Force Participation Rate", title="Diff-in-Diff Plot (with covariates)")
y.pre.tr <<- mean(filter(datapred,anykids==1, post93==0)$.y) %>% round(3)
y.exp.tr <<- mean(filter(datapred,anykids==1, post93==1)$.y) %>% round(3)
y.pre.co <<- mean(filter(datapred,anykids==0, post93==0)$.y) %>% round(3)
y.exp.co <<- mean(filter(datapred,anykids==0, post93==1)$.y) %>% round(3)
gg_cov = gg_cov +
geom_segment(x=1992, y=y.pre.tr, xend=1994.5, yend=y.exp.tr, linetype=1, linewidth=0.75, colour="#00BFC4")+
geom_segment(x=1992, y=y.pre.co, xend=1994.5, yend=y.exp.co, linetype=1, linewidth=0.75, colour="#F8766D") +
geom_segment(x=1992, y=y.pre.co, xend=1992, yend=y.pre.tr, linetype=5, colour="grey", linewidth=0.75) +
geom_segment(x=1994.5, y=y.exp.co, xend=1994.5, yend=y.pre.tr+y.exp.co-y.pre.co, linetype=5, colour="grey", linewidth=0.75) +
geom_segment(x=1992, y=y.pre.tr, xend=1994.5, yend=y.pre.tr+y.exp.co-y.pre.co, linetype=5, colour="black", linewidth=0.75) +
annotate("label", x=1992, y=y.pre.co-0.01,label=y.pre.co) +
annotate("label", x=1994.5, y=y.exp.tr+0.01,label=y.exp.tr) +
annotate("label", x=1994.5, y=y.exp.co-0.01,label=y.exp.co) + annotate("label", x=1992, y=y.pre.tr+0.01,label=y.pre.tr) +
geom_curve(aes(x = 1994.5, xend = 1994.5, y = y.pre.tr+y.exp.co-y.pre.co, yend = y.exp.tr),
curvature=.2, color = 'black', linewidth = 0.75, arrow = arrow(length = unit(.2, 'cm')))
gg_cov
y.pre.tr <<- mean(filter(datapred,anykids==1, post93==0)$.y) #not rounded
y.exp.tr <<- mean(filter(datapred,anykids==1, post93==1)$.y)
y.pre.co <<- mean(filter(datapred,anykids==0, post93==0)$.y)
y.exp.co <<- mean(filter(datapred,anykids==0, post93==1)$.y)
(y.exp.tr-y.pre.tr)-(y.exp.co-y.pre.co) #result from plot
model3_fe #compare with regression result
need <- c("modelsummary","rstudioapi","haven","fixest","ggiplot","car", "tidyverse",
"parameters",'ParallelTrendsPlot',"ggdist",'corrplot') # list packages needed
have <- need %in% rownames(installed.packages()) # checks packages you have
if(any(!have)) install.packages(need[!have]) # install missing packages
invisible(lapply(need, library, character.only=T)) # load needed packages
corrplot(cor(data))
cor(data)
View(data)
class(data)
View(data)
attributes(data)
corrplot(cor(as.dataframe(data)))
corrplot(cor(as.data.frame(data))
corrplot(cor(as.data.frame(data))
corrplot(cor(as.data.frame(data))
corrplot(cor(as.data.frame(data)))
corrplot(cor(as.data.frame(data)))
data1 <- as.data.frame(data)
corrplot(cor(data1))
corrplot(cor(x=data1))
class(data1)
View(data1)
var(data1)
cor(data1)
data1 <- data[,c(urate, age)]
data1 <- subset(data,select=c(urate, age))
data1 <- subset(data,select=c(urate, age, children, fin, earn, ed, work))
#correlation plot
data1 <- subset(data,select=c(urate, age, children, finc, earn, ed, work))
corrplot(cor(data1))
install.packages('ggcorrplot')
library(ggcorrplot)
ggcorrplot(cor(df))
ggcorrplot(cor(data1))
ggcorrplot(cor(data1), lab=TRUE)
corrplot(cor(data1), method='color')
ggcorrplot(cor(data1), lab=TRUE)
corrplot(cor(data1), method='color')
ggcorrplot(cor(data1), lab=TRUE)
ggcorrplot(cor(data1), lab=TRUE)
ggcorrplot(cor(data1), lab=TRUE, colors=c("#BB4444","#FFFFFF","#4477AA"))
data1 <- subset(data,select=c(urate, age, children, finc, earn, ed, work, unearn, year))
ggcorrplot(cor(data1), lab=TRUE, colors=c("#BB4444","#FFFFFF","#4477AA"))
corrplot(cor(data1), method = "shade", shade.col = NA, tl.col = "black", tl.srt = 45,
col = col(200), addCoef.col = "black", cl.pos = "n", order = "AOE")
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
corrplot(cor(data1), method = "shade", shade.col = NA, tl.col = "black", tl.srt = 45,
col = col(200), addCoef.col = "black", cl.pos = "n", order = "AOE")
ggcorrplot(cor(data1), lab=TRUE, colors=c("#BB4444","#FFFFFF","#4477AA"))
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
corrplot(cor(data1), method = "shade", shade.col = NA, tl.col = "black", tl.srt = 45,
col = col(200), addCoef.col = "black", cl.pos = "n", order = "AOE")
ggcorrplot(cor(data1), lab=TRUE, colors=c("#BB4444","#FFFFFF","#4477AA"))
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
corrplot(cor(data1), method = "shade", shade.col = NA, tl.col = "black", tl.srt = 45,
col = col(200), addCoef.col = "black", cl.pos = "n", order = "AOE")
